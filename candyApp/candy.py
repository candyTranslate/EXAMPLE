# file created: 2022-07-17 21:12:55.135568

# this files has been generated by XXXXXXXX.XXX  Please do not change manually
# author: Next Level Sense

# Available functions:
#    render - replacement for django render function
#    path - replacement for django path function. please use with * when replacing in urls.py
#    supported_languages - list that contains all available languages for this site
# Functions to be used in django templates:
#    languageReferences - create 'alternate' language references for SEO.
#        put it inside of the <head> section of the page in format {{languageReferences|safe}}
#    lang - current language. Used mostly in <html lang="{{lang}}">
#    languageMenu - adding language selection for your page. Format: {{languageMenu|safe}}
#    <<link variables>> - create linking to correct language link. 
#    usage:
#    for translated pages change {% url "my_page" %}
#    to name without quotes:     {% url my_page %}


supported_languages = ['en', 'de', 'es']

def translation_dictionary(lang):
    if lang == 'en': return {
        'all_main':'''Main Page''',
        'all_implementation':'''Implementation''',
        'all_contact':'''Contact''',
        'home_title':'''Translations framework for Django''',
        'home_description':'''This is just an example for multi-language website''',
        'home_subject':'''Candy Translate''',
        'home_info':'''Easy and quick way to add languages to the website. Free for everyone! Visit the website here: ''',
        'implementation_title':'''Implementation instructions''',
        'implementation_description':'''Example of implementation''',
        'implementation_subject':'''Easy steps to add languages to the website''',
        'implementation_info':'''To check simple steps for having multi-language website please visit: ''',
        'contact_title':'''Contact page''',
        'contact_description':'''Contact information''',
        'contact_subject':'''Contact us''',
        'contact_info':'''If you need support please use this email for contact: ''',
        }
    if lang == 'de': return {
        'all_main':'''Hauptseite''',
        'all_implementation':'''Implementierung''',
        'all_contact':'''Kontakt''',
        'home_title':'''Übersetzungsrahmen für Django''',
        'home_description':'''Dies ist nur ein Beispiel für eine mehrsprachige Website''',
        'home_subject':'''Süßigkeiten übersetzen''',
        'home_info':'''Einfache und schnelle Möglichkeit, der Website Sprachen hinzuzufügen. Kostenlos für alle! Besuchen Sie die Website hier:''',
        'implementation_title':'''Implementierungsanweisungen''',
        'implementation_description':'''Beispiel für die Implementierung''',
        'implementation_subject':'''Einfache Schritte zum Hinzufügen von Sprachen zur Website''',
        'implementation_info':'''Um einfache Schritte für eine mehrsprachige Website zu überprüfen, besuchen Sie bitte:''',
        'contact_title':'''Kontaktseite''',
        'contact_description':'''Kontaktinformationen''',
        'contact_subject':'''Kontaktiere uns''',
        'contact_info':'''Wenn Sie Unterstützung benötigen, verwenden Sie diese E -Mail für Kontakt:''',
        }
    if lang == 'es': return {
        'all_main':'''Pagina principal''',
        'all_implementation':'''Implementación''',
        'all_contact':'''Contacto''',
        'home_title':'''Marco de traducciones para Django''',
        'home_description':'''Este es solo un ejemplo para el sitio web de varios idiomas''',
        'home_subject':'''Los dulces traducir''',
        'home_info':'''Forma fácil y rápida de agregar idiomas al sitio web. ¡GRATIS para todos! Visite el sitio web aquí:''',
        'implementation_title':'''Instrucciones de implementación''',
        'implementation_description':'''Ejemplo de implementación''',
        'implementation_subject':'''Pasos sencillos para agregar idiomas al sitio web''',
        'implementation_info':'''Para verificar los pasos simples para tener un sitio web de varios idiomas, visite:''',
        'contact_title':'''Pagina de contacto''',
        'contact_description':'''Información del contacto''',
        'contact_subject':'''Contáctenos''',
        'contact_info':'''Si necesita soporte, use este correo electrónico para contactar:''',
        }


def detectLanguage(request):
    languageDetected = supported_languages[0]
    lastPath = request.path.split('/')[-1]
    if lastPath in supported_languages[1:]:
        languageDetected = lastPath
    return languageDetected


from django.urls import path as org_path
def path(route, view, kwargs=None, name=None):
    if route == '':
        return [org_path('', view, kwargs, name),org_path('de', view, kwargs, name+'_de'),org_path('es', view, kwargs, name+'_es'),]
    if route[-1] == '/': route=route[:-1]
    return [org_path(route, view, kwargs, name),org_path(route+'/de', view, kwargs, name+'_de'),org_path(route+'/es', view, kwargs, name+'_es'),]


def langRef(path_ref):
    last=path_ref.split('/')[-1]
    if last in supported_languages:
        path_ref=path_ref[:-len(last)-1]
    result='<link rel="alternate" hreflang="en" href="'+addLinks(path_ref,'')+'" />\n'
    result+='<link rel="alternate" hreflang="de" href="'+addLinks(path_ref,'de')+'" />\n'
    result+='<link rel="alternate" hreflang="es" href="'+addLinks(path_ref,'es')+'" />\n'
    result+='<link rel="alternate" hreflang="x-default" href="'+addLinks(path_ref,'')+'" />\n'
    return result


from django.urls import get_resolver
def translatedLinks(lang):
    names=[]
    for i in get_resolver().url_patterns:
        if hasattr(i, 'name'):
            if i.name:
                names.append(i.name)
    result = {}
    if lang == supported_languages[0]:
        for i in names:
            if i[-3:] not in ['_de', '_es'] and names.count(i+'_de'):
                result.update({i:i})
        return result
    for i in names:
        if names.count(i+'_'+lang):
            result.update({i:i+'_'+lang})
    return result


def languageMenu(path, lang):
    selected = [' ', ' ', ' ']
    selected[supported_languages.index(lang)]=' selected '
    if supported_languages.index(lang):
        path=path[:-3]
    result = '<select id="languageMenu" onchange="window.location = this.value;">'
    if path == '/': path = ''
    if path =='':
        result += '<option'+selected[0]+'value="/">English (English)</option>'
    else:
        result += '<option'+selected[0]+'value="' + path +'">English (English)</option>'
    result += '<option'+selected[1]+'value="' + path +'/de">German (Deutsch)</option>'
    result += '<option'+selected[2]+'value="' + path +'/es">Spanish (Español)</option>'
    result += '</select>'
    return result


from django.shortcuts import render as org_render
def render(request, template_name, context=None, *args, **kwargs):
    lang=detectLanguage(request)
    if context == None:
        context={}
    return org_render(request, template_name, {**context,
                                                **translation_dictionary(lang),
                                                'lang':lang,
                                                'languageReferences':langRef(request.build_absolute_uri()),
                                                'languageMenu':languageMenu(request.path, lang),
                                                'candyLink':translatedLinks(lang),
                                                }, *args, **kwargs)


def addLinks(*args):
    result=''
    for i in args:
        if result and result[-1]=='/':result=result[:-1]
        if i and i[-1]=='/':i=i[:-1]
        if i and i[0]=='/':i=i[1:]
        if result and i: result+='/'
        result+=i
    return result


def provideSitemap(request, add_pages=[], remove_pages=[]):
    from django.http import HttpResponse
    result='<?xml version="1.0" encoding="UTF-8"?>'+'\n'
    result+='<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'+'\n'
    domain= request.build_absolute_uri()
    domain=domain.split('/')[0]+'//'+domain.split('/')[2]+'/'
    paths = []
    for i in get_resolver().url_patterns:
        if str(type(i))=="<class 'django.urls.resolvers.URLPattern'>":
            route=i.pattern._route
            route=route.split('<')[0]
            if not route == 'sitemap.xml':
                paths.append(addLinks(domain,route))
    paths+=add_pages
    paths=list(dict.fromkeys(paths))
    for route in paths:
        if route not in remove_pages:
            result+='<url>'+'\n'
            result+='<loc>'+route+'</loc>'+'\n'
            result+='</url>'+'\n'
    result+='</urlset>'
    result= result.encode('utf-8')
    return HttpResponse(result, content_type='application/xml; charset=utf-8')


def sitemap(add_pages=[], remove_pages=[]):
    return [org_path('sitemap.xml', provideSitemap,{'add_pages' :add_pages,'remove_pages': remove_pages})]


